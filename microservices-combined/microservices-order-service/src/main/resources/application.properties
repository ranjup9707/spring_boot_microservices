spring.application.name=order-service
spring.datasource.name=datasource
spring.datasource.url=jdbc:mysql://localhost:3306/microservice_order_service
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
server.port=9006

#Eureka Server
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:9000/eureka

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j
#inventory in every key is not a constant name and can be different 
#but the name passed here should be the same present in OrderController annotation of @CircuitBreaker &
#@TimeLimiter
#To see the state - Open, Closed, Half Close
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#Wont open circuit breaker immedicately will open after certain count
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
#Open circuit breaker after 5 failure attempt
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
#Wait in the open state
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4j Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4j Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer